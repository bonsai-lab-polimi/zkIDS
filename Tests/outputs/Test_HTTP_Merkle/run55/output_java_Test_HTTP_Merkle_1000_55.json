[
    [
        "[1st Phase] Running Initial Circuit Analysis for < Test_HTTP_Merkle >\n",
        0.025542736053466797,
        0.01
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        0.4882853031158447,
        1.78
    ],
    [
        "Num of variable reads = 1480\n",
        0.4989314079284668,
        1.81
    ],
    [
        "Num of conditional writes = 0\n",
        0.5060451030731201,
        1.85
    ],
    [
        "Num of words per element = 1\n",
        0.5128130912780762,
        1.8800000000000001
    ],
    [
        "Num of variable writes = 0\n",
        0.5189218521118164,
        1.9000000000000001
    ],
    [
        "num of accesses = 1480\n",
        0.5248699188232422,
        1.9300000000000002
    ],
    [
        "Packing Option = 1\n",
        0.5305962562561035,
        1.9500000000000002
    ],
    [
        "Decision: Using Read-only O(sqrt n) mode for this memory\n",
        0.53633713722229,
        1.98
    ],
    [
        "Attempting to solve linear systems for efficient Read-only memory access: Attempt#1 -- bitcount = 15\n",
        0.5420963764190674,
        1.99
    ],
    [
        "done with read only memory solutions!\n",
        1.1507394313812256,
        3.1
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.1651692390441895,
        3.12
    ],
    [
        "Num of variable reads = 128\n",
        1.1782848834991455,
        3.1300000000000003
    ],
    [
        "Num of conditional writes = 0\n",
        1.191014289855957,
        3.14
    ],
    [
        "Num of words per element = 1\n",
        1.2057950496673584,
        3.1900000000000004
    ],
    [
        "Num of variable writes = 0\n",
        1.2194054126739502,
        3.2
    ],
    [
        "num of accesses = 128\n",
        1.2327492237091064,
        3.21
    ],
    [
        "Packing Option = 1\n",
        1.2459948062896729,
        3.23
    ],
    [
        "Decision: Using Network mode for this memory\n",
        1.2589704990386963,
        3.24
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.2720098495483398,
        3.25
    ],
    [
        "Num of variable reads = 520\n",
        1.2849116325378418,
        3.27
    ],
    [
        "Num of conditional writes = 0\n",
        1.2978262901306152,
        3.2800000000000002
    ],
    [
        "Num of words per element = 1\n",
        1.31083083152771,
        3.29
    ],
    [
        "Num of variable writes = 0\n",
        1.3256852626800537,
        3.33
    ],
    [
        "num of accesses = 520\n",
        1.339524745941162,
        3.3400000000000003
    ],
    [
        "Packing Option = 1\n",
        1.352708101272583,
        3.3600000000000003
    ],
    [
        "Decision: Using Read-only O(sqrt n) mode for this memory\n",
        1.365985631942749,
        3.37
    ],
    [
        "Attempting to solve linear systems for efficient Read-only memory access: Attempt#1 -- bitcount = 15\n",
        1.3792202472686768,
        3.39
    ],
    [
        "done with read only memory solutions!\n",
        1.7006609439849854,
        3.77
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.7164413928985596,
        3.79
    ],
    [
        "Num of variable reads = 128\n",
        1.7313580513000488,
        3.8
    ],
    [
        "Num of conditional writes = 0\n",
        1.7463037967681885,
        3.81
    ],
    [
        "Num of words per element = 1\n",
        1.7609748840332031,
        3.85
    ],
    [
        "Num of variable writes = 0\n",
        1.7758910655975342,
        3.86
    ],
    [
        "num of accesses = 128\n",
        1.791022539138794,
        3.87
    ],
    [
        "Packing Option = 1\n",
        1.805967092514038,
        3.89
    ],
    [
        "Decision: Using Network mode for this memory\n",
        1.8212628364562988,
        3.91
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.8360912799835205,
        3.92
    ],
    [
        "Num of variable reads = 71\n",
        1.8510594367980957,
        3.93
    ],
    [
        "Num of conditional writes = 0\n",
        1.8659186363220215,
        3.95
    ],
    [
        "Num of words per element = 1\n",
        1.8808996677398682,
        3.97
    ],
    [
        "Num of variable writes = 0\n",
        1.8958625793457031,
        3.98
    ],
    [
        "num of accesses = 71\n",
        1.9130971431732178,
        4.0200000000000005
    ],
    [
        "Packing Option = 1\n",
        1.9289188385009766,
        4.04
    ],
    [
        "Decision: Using Linear mode for this memory\n",
        1.9448530673980713,
        4.07
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.9607810974121094,
        4.1000000000000005
    ],
    [
        "Num of variable reads = 128\n",
        1.9766101837158203,
        4.12
    ],
    [
        "Num of conditional writes = 0\n",
        1.9921820163726807,
        4.140000000000001
    ],
    [
        "Num of words per element = 1\n",
        2.00810170173645,
        4.16
    ],
    [
        "Num of variable writes = 0\n",
        2.024132490158081,
        4.19
    ],
    [
        "num of accesses = 128\n",
        2.0380663871765137,
        4.2
    ],
    [
        "Packing Option = 0\n",
        2.054553270339966,
        4.24
    ],
    [
        "Decision: Using Network mode for this memory\n",
        2.07022762298584,
        4.26
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        2.0857865810394287,
        4.28
    ],
    [
        "Num of variable reads = 71\n",
        2.101560115814209,
        4.3100000000000005
    ],
    [
        "Num of conditional writes = 0\n",
        2.116238594055176,
        4.33
    ],
    [
        "Num of words per element = 1\n",
        2.1314055919647217,
        4.3500000000000005
    ],
    [
        "Num of variable writes = 0\n",
        2.147474527359009,
        4.38
    ],
    [
        "num of accesses = 71\n",
        2.1633570194244385,
        4.4
    ],
    [
        "Packing Option = 1\n",
        2.179264783859253,
        4.430000000000001
    ],
    [
        "Decision: Using Linear mode for this memory\n",
        2.1951241493225098,
        4.470000000000001
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        2.212435483932495,
        4.53
    ],
    [
        "Num of variable reads = 128\n",
        2.225226640701294,
        4.55
    ],
    [
        "Num of conditional writes = 0\n",
        2.2364065647125244,
        4.5600000000000005
    ],
    [
        "Num of words per element = 1\n",
        2.2468693256378174,
        4.57
    ],
    [
        "Num of variable writes = 0\n",
        2.25726056098938,
        4.58
    ],
    [
        "num of accesses = 128\n",
        2.267969846725464,
        4.61
    ],
    [
        "Packing Option = 0\n",
        2.278966188430786,
        4.640000000000001
    ],
    [
        "Decision: Using Network mode for this memory\n",
        2.289834499359131,
        4.67
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        2.302313804626465,
        4.71
    ],
    [
        "Num of variable reads = 0\n",
        2.3159666061401367,
        4.76
    ],
    [
        "Num of conditional writes = 0\n",
        2.3295376300811768,
        4.83
    ],
    [
        "Num of words per element = 1\n",
        2.3437087535858154,
        4.88
    ],
    [
        "Num of variable writes = 0\n",
        2.357041358947754,
        4.91
    ],
    [
        "num of accesses = 0\n",
        2.370750665664673,
        4.96
    ],
    [
        "Packing Option = 0\n",
        2.3852128982543945,
        5.0200000000000005
    ],
    [
        "Decision: Using Linear mode for this memory\n",
        2.3990933895111084,
        5.07
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        2.4118094444274902,
        5.1000000000000005
    ],
    [
        "Num of variable reads = 10120\n",
        2.424875259399414,
        5.12
    ],
    [
        "Num of conditional writes = 0\n",
        2.4372901916503906,
        5.13
    ],
    [
        "Num of words per element = 1\n",
        2.4510889053344727,
        5.16
    ],
    [
        "Num of variable writes = 0\n",
        2.4637839794158936,
        5.180000000000001
    ],
    [
        "num of accesses = 10120\n",
        2.4760680198669434,
        5.2
    ],
    [
        "Packing Option = 1\n",
        2.488116979598999,
        5.24
    ],
    [
        "Decision: Using Read-only O(sqrt n) mode for this memory\n",
        2.49957013130188,
        5.24
    ],
    [
        "Attempting to solve linear systems for efficient Read-only memory access: Attempt#1 -- bitcount = 15\n",
        2.511411190032959,
        5.27
    ],
    [
        "done with read only memory solutions!\n",
        2.5245895385742188,
        5.34
    ],
    [
        "Phase 1: Analysis Completed!\n",
        2.5382235050201416,
        5.37
    ],
    [
        "[2nd Phase] Running Circuit Generator for < Test_HTTP_Merkle >\n",
        2.5514273643493652,
        5.3999999999999995
    ],
    [
        "Circuit Generation Done for < Test_HTTP_Merkle >  \n",
        5.9430365562438965,
        24.810000000000002
    ],
    [
        " \t Total Number of Constraints :  2146535\n",
        5.9776928424835205,
        24.970000000000002
    ],
    [
        "\n",
        6.006529331207275,
        25.080000000000002
    ],
    [
        "Instruction queue size: 8566493\n",
        6.038285255432129,
        25.18
    ],
    [
        "Normal execution\n",
        13.793798208236694,
        34.620000000000005
    ],
    [
        "Running Sample Run: run10001\n",
        13.82654619216919,
        34.660000000000004
    ],
    [
        "../Tests/tls_data.txt\n",
        13.851684331893921,
        34.660000000000004
    ],
    [
        "../Tests/merkle_data.txt\n",
        13.8769211769104,
        34.68
    ],
    [
        "Url assignment done\n",
        13.903481483459473,
        34.72
    ],
    [
        "Evaluating Input on the circuit \n",
        13.932642936706543,
        34.85
    ],
    [
        "\t[input] Value of Wire # 0 (The one-input wire.) :: 1\n",
        13.962398767471313,
        34.910000000000004
    ],
    [
        "\t[input] Value of Wire # 2 :: 6e8\n",
        13.993635416030884,
        34.97
    ],
    [
        "\t[input] Value of Wire # 19 :: 108\n",
        14.02449893951416,
        35.0
    ],
    [
        "\t[input] Value of Wire # 20 :: 4\n",
        14.05533742904663,
        35.03
    ],
    [
        "\t[input] Value of Wire # 21 :: 6\n",
        14.085258483886719,
        35.07
    ],
    [
        "\t[input] Value of Wire # 22 :: 297ca9c14951fbaad217dc76566893385ae3ed90b54baf41c6ba205e35a0b646\n",
        14.114890575408936,
        35.1
    ],
    [
        "\t[input] Value of Wire # 23 :: e3\n",
        14.144798278808594,
        35.13
    ],
    [
        "\t[input] Value of Wire # 32 :: bf\n",
        14.176079273223877,
        35.160000000000004
    ],
    [
        "\t[input] Value of Wire # 41 :: a4\n",
        14.207472801208496,
        35.26
    ],
    [
        "\t[input] Value of Wire # 50 :: 1\n",
        14.239053964614868,
        35.31
    ],
    [
        "\t[input] Value of Wire # 59 :: a4\n",
        14.270113945007324,
        35.36
    ],
    [
        "\t[input] Value of Wire # 68 :: 40\n",
        14.301727771759033,
        35.4
    ],
    [
        "\t[input] Value of Wire # 77 :: ed\n",
        14.332472085952759,
        35.43
    ],
    [
        "\t[input] Value of Wire # 86 :: 41\n",
        14.361716508865356,
        35.46
    ],
    [
        "\t[input] Value of Wire # 95 :: f\n",
        14.392935514450073,
        35.5
    ],
    [
        "\t[input] Value of Wire # 104 :: 3b\n",
        14.421685218811035,
        35.53
    ],
    [
        "\t[input] Value of Wire # 113 :: d0\n",
        14.450214147567749,
        35.56
    ],
    [
        "\t[input] Value of Wire # 122 :: b2\n",
        14.479151248931885,
        35.59
    ],
    [
        "\t[input] Value of Wire # 131 :: 5e\n",
        14.509315252304077,
        35.620000000000005
    ],
    [
        "\t[input] Value of Wire # 140 :: 1f\n",
        14.539375305175781,
        35.660000000000004
    ],
    [
        "\t[input] Value of Wire # 149 :: b7\n",
        14.565747499465942,
        35.67
    ],
    [
        "\t[input] Value of Wire # 158 :: 92\n",
        14.593174934387207,
        35.72
    ],
    [
        "\t[input] Value of Wire # 167 :: 9f\n",
        14.62037205696106,
        35.77
    ],
    [
        "\t[input] Value of Wire # 176 :: 37\n",
        14.647169589996338,
        35.81
    ],
    [
        "\t[input] Value of Wire # 185 :: 6b\n",
        14.674187421798706,
        35.86
    ],
    [
        "\t[input] Value of Wire # 194 :: 74\n",
        14.702273845672607,
        35.95
    ],
    [
        "\t[input] Value of Wire # 203 :: bb\n",
        14.732588768005371,
        36.04
    ],
    [
        "\t[input] Value of Wire # 212 :: 39\n",
        14.763223886489868,
        36.120000000000005
    ],
    [
        "\t[input] Value of Wire # 221 :: 5\n",
        14.79414439201355,
        36.18
    ],
    [
        "\t[input] Value of Wire # 230 :: 2b\n",
        14.826070070266724,
        36.24
    ],
    [
        "\t[input] Value of Wire # 239 :: 43\n",
        14.85851502418518,
        36.300000000000004
    ],
    [
        "\t[input] Value of Wire # 248 :: 1d\n",
        14.888099908828735,
        36.33
    ],
    [
        "\t[input] Value of Wire # 257 :: 93\n",
        14.913572311401367,
        36.33
    ],
    [
        "\t[input] Value of Wire # 266 :: a9\n",
        14.939619064331055,
        36.34
    ],
    [
        "\t[input] Value of Wire # 275 :: b7\n",
        14.964767217636108,
        36.34
    ],
    [
        "\t[input] Value of Wire # 284 :: f2\n",
        14.989569664001465,
        36.34
    ],
    [
        "\t[input] Value of Wire # 293 :: cb\n",
        15.01430058479309,
        36.34
    ],
    [
        "\t[input] Value of Wire # 302 :: 99\n",
        15.038938760757446,
        36.34
    ],
    [
        "\t[input] Value of Wire # 311 :: cf\n",
        15.063621044158936,
        36.34
    ],
    [
        "\t[input] Value of Wire # 320 :: a3\n",
        15.088320255279541,
        36.34
    ],
    [
        "\t[input] Value of Wire # 329 :: 2f\n",
        15.11310076713562,
        36.34
    ],
    [
        "\t[input] Value of Wire # 338 :: d4\n",
        15.138092279434204,
        36.35
    ],
    [
        "\t[input] Value of Wire # 347 :: 0\n",
        15.163108587265015,
        36.35
    ],
    [
        "\t[input] Value of Wire # 356 :: 0\n",
        15.188169717788696,
        36.35
    ],
    [
        "\t[input] Value of Wire # 365 :: 0\n",
        15.213107347488403,
        36.35
    ],
    [
        "Done",
        15.447197437286377,
        36.36
    ]
]