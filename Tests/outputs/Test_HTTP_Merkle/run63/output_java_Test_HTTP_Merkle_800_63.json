[
    [
        "[1st Phase] Running Initial Circuit Analysis for < Test_HTTP_Merkle >\n",
        0.02588200569152832,
        0.02
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        0.47521543502807617,
        1.71
    ],
    [
        "Num of variable reads = 1480\n",
        0.48464250564575195,
        1.74
    ],
    [
        "Num of conditional writes = 0\n",
        0.4957115650177002,
        1.7899999999999998
    ],
    [
        "Num of words per element = 1\n",
        0.5039031505584717,
        1.8199999999999998
    ],
    [
        "Num of variable writes = 0\n",
        0.5134730339050293,
        1.8599999999999999
    ],
    [
        "num of accesses = 1480\n",
        0.5211672782897949,
        1.88
    ],
    [
        "Packing Option = 1\n",
        0.5277323722839355,
        1.91
    ],
    [
        "Decision: Using Read-only O(sqrt n) mode for this memory\n",
        0.5336625576019287,
        1.94
    ],
    [
        "Attempting to solve linear systems for efficient Read-only memory access: Attempt#1 -- bitcount = 15\n",
        0.5395681858062744,
        1.96
    ],
    [
        "done with read only memory solutions!\n",
        1.1206438541412354,
        2.9699999999999998
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.1349215507507324,
        2.99
    ],
    [
        "Num of variable reads = 128\n",
        1.145780086517334,
        3.0
    ],
    [
        "Num of conditional writes = 0\n",
        1.1551856994628906,
        3.01
    ],
    [
        "Num of words per element = 1\n",
        1.1645426750183105,
        3.0199999999999996
    ],
    [
        "Num of variable writes = 0\n",
        1.1738240718841553,
        3.0300000000000002
    ],
    [
        "num of accesses = 128\n",
        1.1870460510253906,
        3.0599999999999996
    ],
    [
        "Packing Option = 1\n",
        1.1983931064605713,
        3.0700000000000003
    ],
    [
        "Decision: Using Network mode for this memory\n",
        1.2093775272369385,
        3.08
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.2200126647949219,
        3.09
    ],
    [
        "Num of variable reads = 520\n",
        1.2302286624908447,
        3.0999999999999996
    ],
    [
        "Num of conditional writes = 0\n",
        1.2402172088623047,
        3.1100000000000003
    ],
    [
        "Num of words per element = 1\n",
        1.24967360496521,
        3.12
    ],
    [
        "Num of variable writes = 0\n",
        1.2592082023620605,
        3.13
    ],
    [
        "num of accesses = 520\n",
        1.2685661315917969,
        3.1399999999999997
    ],
    [
        "Packing Option = 1\n",
        1.2783129215240479,
        3.1500000000000004
    ],
    [
        "Decision: Using Read-only O(sqrt n) mode for this memory\n",
        1.2876670360565186,
        3.16
    ],
    [
        "Attempting to solve linear systems for efficient Read-only memory access: Attempt#1 -- bitcount = 15\n",
        1.2998731136322021,
        3.1900000000000004
    ],
    [
        "done with read only memory solutions!\n",
        1.5996150970458984,
        3.54
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.612966775894165,
        3.57
    ],
    [
        "Num of variable reads = 128\n",
        1.6236317157745361,
        3.58
    ],
    [
        "Num of conditional writes = 0\n",
        1.6331148147583008,
        3.59
    ],
    [
        "Num of words per element = 1\n",
        1.64439058303833,
        3.62
    ],
    [
        "Num of variable writes = 0\n",
        1.6544790267944336,
        3.63
    ],
    [
        "num of accesses = 128\n",
        1.6637189388275146,
        3.64
    ],
    [
        "Packing Option = 1\n",
        1.6724271774291992,
        3.64
    ],
    [
        "Decision: Using Network mode for this memory\n",
        1.680802822113037,
        3.65
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.688910961151123,
        3.66
    ],
    [
        "Num of variable reads = 71\n",
        1.6967518329620361,
        3.67
    ],
    [
        "Num of conditional writes = 0\n",
        1.7044589519500732,
        3.68
    ],
    [
        "Num of words per element = 1\n",
        1.7119195461273193,
        3.68
    ],
    [
        "Num of variable writes = 0\n",
        1.7193670272827148,
        3.69
    ],
    [
        "num of accesses = 71\n",
        1.7268142700195312,
        3.7
    ],
    [
        "Packing Option = 1\n",
        1.7340993881225586,
        3.71
    ],
    [
        "Decision: Using Linear mode for this memory\n",
        1.741274356842041,
        3.72
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.7480506896972656,
        3.72
    ],
    [
        "Num of variable reads = 128\n",
        1.757918357849121,
        3.75
    ],
    [
        "Num of conditional writes = 0\n",
        1.7689285278320312,
        3.76
    ],
    [
        "Num of words per element = 1\n",
        1.778961181640625,
        3.77
    ],
    [
        "Num of variable writes = 0\n",
        1.7883141040802002,
        3.78
    ],
    [
        "num of accesses = 128\n",
        1.7971034049987793,
        3.79
    ],
    [
        "Packing Option = 0\n",
        1.8053722381591797,
        3.8
    ],
    [
        "Decision: Using Network mode for this memory\n",
        1.8133389949798584,
        3.81
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.8221187591552734,
        3.83
    ],
    [
        "Num of variable reads = 71\n",
        1.830672264099121,
        3.84
    ],
    [
        "Num of conditional writes = 0\n",
        1.839630365371704,
        3.86
    ],
    [
        "Num of words per element = 1\n",
        1.8483338356018066,
        3.87
    ],
    [
        "Num of variable writes = 0\n",
        1.8566648960113525,
        3.88
    ],
    [
        "num of accesses = 71\n",
        1.8643841743469238,
        3.89
    ],
    [
        "Packing Option = 1\n",
        1.8767199516296387,
        3.92
    ],
    [
        "Decision: Using Linear mode for this memory\n",
        1.8877699375152588,
        3.94
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.8977928161621094,
        3.95
    ],
    [
        "Num of variable reads = 128\n",
        1.9077084064483643,
        3.96
    ],
    [
        "Num of conditional writes = 0\n",
        1.9173328876495361,
        3.97
    ],
    [
        "Num of words per element = 1\n",
        1.9267117977142334,
        3.98
    ],
    [
        "Num of variable writes = 0\n",
        1.9357950687408447,
        3.99
    ],
    [
        "num of accesses = 128\n",
        1.9443795680999756,
        4.0
    ],
    [
        "Packing Option = 0\n",
        1.9525046348571777,
        4.0
    ],
    [
        "Decision: Using Network mode for this memory\n",
        1.9602839946746826,
        4.01
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.9684100151062012,
        4.029999999999999
    ],
    [
        "Num of variable reads = 0\n",
        1.9763503074645996,
        4.05
    ],
    [
        "Num of conditional writes = 0\n",
        1.987882375717163,
        4.08
    ],
    [
        "Num of words per element = 1\n",
        2.0002851486206055,
        4.1
    ],
    [
        "Num of variable writes = 0\n",
        2.012244939804077,
        4.13
    ],
    [
        "num of accesses = 0\n",
        2.0246407985687256,
        4.17
    ],
    [
        "Packing Option = 0\n",
        2.035108804702759,
        4.18
    ],
    [
        "Decision: Using Linear mode for this memory\n",
        2.0449576377868652,
        4.1899999999999995
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        2.0552239418029785,
        4.220000000000001
    ],
    [
        "Num of variable reads = 8040\n",
        2.065425395965576,
        4.23
    ],
    [
        "Num of conditional writes = 0\n",
        2.075429677963257,
        4.24
    ],
    [
        "Num of words per element = 1\n",
        2.08396577835083,
        4.25
    ],
    [
        "Num of variable writes = 0\n",
        2.092517375946045,
        4.27
    ],
    [
        "num of accesses = 8040\n",
        2.1015877723693848,
        4.31
    ],
    [
        "Packing Option = 1\n",
        2.1108524799346924,
        4.33
    ],
    [
        "Decision: Using Read-only O(sqrt n) mode for this memory\n",
        2.1199584007263184,
        4.35
    ],
    [
        "Attempting to solve linear systems for efficient Read-only memory access: Attempt#1 -- bitcount = 15\n",
        2.12893009185791,
        4.37
    ],
    [
        "done with read only memory solutions!\n",
        2.1378824710845947,
        4.39
    ],
    [
        "Phase 1: Analysis Completed!\n",
        2.1466000080108643,
        4.41
    ],
    [
        "[2nd Phase] Running Circuit Generator for < Test_HTTP_Merkle >\n",
        2.1554417610168457,
        4.42
    ],
    [
        "Circuit Generation Done for < Test_HTTP_Merkle >  \n",
        5.369109392166138,
        20.96
    ],
    [
        " \t Total Number of Constraints :  1993791\n",
        5.401426553726196,
        21.21
    ],
    [
        "\n",
        5.433122396469116,
        21.34
    ],
    [
        "Instruction queue size: 7372401\n",
        5.461904048919678,
        21.51
    ],
    [
        "Normal execution\n",
        11.99893593788147,
        28.889999999999997
    ],
    [
        "Running Sample Run: run8001\n",
        12.023820400238037,
        28.9
    ],
    [
        "../Tests/tls_data.txt\n",
        12.045528888702393,
        28.91
    ],
    [
        "../Tests/merkle_data.txt\n",
        12.067279815673828,
        28.92
    ],
    [
        "Url assignment done\n",
        12.0891273021698,
        28.96
    ],
    [
        "Evaluating Input on the circuit \n",
        12.113778114318848,
        29.05
    ],
    [
        "\t[input] Value of Wire # 0 (The one-input wire.) :: 1\n",
        12.13943362236023,
        29.12
    ],
    [
        "\t[input] Value of Wire # 2 :: 6e8\n",
        12.165954828262329,
        29.17
    ],
    [
        "\t[input] Value of Wire # 19 :: 108\n",
        12.193208932876587,
        29.19
    ],
    [
        "\t[input] Value of Wire # 20 :: 4\n",
        12.220069408416748,
        29.23
    ],
    [
        "\t[input] Value of Wire # 21 :: 6\n",
        12.246894598007202,
        29.26
    ],
    [
        "\t[input] Value of Wire # 22 :: 297ca9c14951fbaad217dc76566893385ae3ed90b54baf41c6ba205e35a0b646\n",
        12.278101921081543,
        29.310000000000002
    ],
    [
        "\t[input] Value of Wire # 23 :: e3\n",
        12.30982255935669,
        29.330000000000002
    ],
    [
        "\t[input] Value of Wire # 32 :: bf\n",
        12.336054801940918,
        29.35
    ],
    [
        "\t[input] Value of Wire # 41 :: a4\n",
        12.362606525421143,
        29.380000000000003
    ],
    [
        "\t[input] Value of Wire # 50 :: 1\n",
        12.389472007751465,
        29.430000000000003
    ],
    [
        "\t[input] Value of Wire # 59 :: a4\n",
        12.41733193397522,
        29.5
    ],
    [
        "\t[input] Value of Wire # 68 :: 40\n",
        12.444976806640625,
        29.540000000000003
    ],
    [
        "\t[input] Value of Wire # 77 :: ed\n",
        12.472316265106201,
        29.59
    ],
    [
        "\t[input] Value of Wire # 86 :: 41\n",
        12.49923062324524,
        29.62
    ],
    [
        "\t[input] Value of Wire # 95 :: f\n",
        12.52538514137268,
        29.650000000000002
    ],
    [
        "\t[input] Value of Wire # 104 :: 3b\n",
        12.551515817642212,
        29.680000000000003
    ],
    [
        "\t[input] Value of Wire # 113 :: d0\n",
        12.577070474624634,
        29.700000000000003
    ],
    [
        "\t[input] Value of Wire # 122 :: b2\n",
        12.602524518966675,
        29.73
    ],
    [
        "\t[input] Value of Wire # 131 :: 5e\n",
        12.627379894256592,
        29.76
    ],
    [
        "\t[input] Value of Wire # 140 :: 1f\n",
        12.651347637176514,
        29.790000000000003
    ],
    [
        "\t[input] Value of Wire # 149 :: b7\n",
        12.674324035644531,
        29.8
    ],
    [
        "\t[input] Value of Wire # 158 :: 92\n",
        12.697962284088135,
        29.85
    ],
    [
        "\t[input] Value of Wire # 167 :: 9f\n",
        12.721093654632568,
        29.89
    ],
    [
        "\t[input] Value of Wire # 176 :: 37\n",
        12.744022607803345,
        29.930000000000003
    ],
    [
        "\t[input] Value of Wire # 185 :: 6b\n",
        12.768675327301025,
        29.990000000000002
    ],
    [
        "\t[input] Value of Wire # 194 :: 74\n",
        12.795439004898071,
        30.080000000000002
    ],
    [
        "\t[input] Value of Wire # 203 :: bb\n",
        12.822624683380127,
        30.16
    ],
    [
        "\t[input] Value of Wire # 212 :: 39\n",
        12.850131511688232,
        30.220000000000002
    ],
    [
        "\t[input] Value of Wire # 221 :: 5\n",
        12.877209901809692,
        30.26
    ],
    [
        "\t[input] Value of Wire # 230 :: 2b\n",
        12.90365219116211,
        30.310000000000002
    ],
    [
        "\t[input] Value of Wire # 239 :: 43\n",
        12.927945613861084,
        30.32
    ],
    [
        "\t[input] Value of Wire # 248 :: 1d\n",
        12.950210094451904,
        30.32
    ],
    [
        "\t[input] Value of Wire # 257 :: 93\n",
        12.972030639648438,
        30.32
    ],
    [
        "\t[input] Value of Wire # 266 :: a9\n",
        12.99365520477295,
        30.32
    ],
    [
        "\t[input] Value of Wire # 275 :: b7\n",
        13.016041040420532,
        30.330000000000002
    ],
    [
        "\t[input] Value of Wire # 284 :: f2\n",
        13.03756308555603,
        30.330000000000002
    ],
    [
        "\t[input] Value of Wire # 293 :: cb\n",
        13.058027982711792,
        30.330000000000002
    ],
    [
        "\t[input] Value of Wire # 302 :: 99\n",
        13.0782470703125,
        30.330000000000002
    ],
    [
        "\t[input] Value of Wire # 311 :: cf\n",
        13.098462104797363,
        30.330000000000002
    ],
    [
        "\t[input] Value of Wire # 320 :: a3\n",
        13.118646621704102,
        30.330000000000002
    ],
    [
        "\t[input] Value of Wire # 329 :: 2f\n",
        13.138830661773682,
        30.330000000000002
    ],
    [
        "\t[input] Value of Wire # 338 :: d4\n",
        13.159128189086914,
        30.330000000000002
    ],
    [
        "\t[input] Value of Wire # 347 :: 0\n",
        13.1793851852417,
        30.330000000000002
    ],
    [
        "\t[input] Value of Wire # 356 :: 0\n",
        13.199628591537476,
        30.330000000000002
    ],
    [
        "Done",
        13.343889951705933,
        30.330000000000002
    ]
]