[
    [
        "[1st Phase] Running Initial Circuit Analysis for < Test_HTTP_Merkle >\n",
        0.023871898651123047,
        0.01
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        0.5446701049804688,
        2.1
    ],
    [
        "Num of variable reads = 1480\n",
        0.5559864044189453,
        2.15
    ],
    [
        "Num of conditional writes = 0\n",
        0.5662839412689209,
        2.18
    ],
    [
        "Num of words per element = 1\n",
        0.5754916667938232,
        2.21
    ],
    [
        "Num of variable writes = 0\n",
        0.5835788249969482,
        2.25
    ],
    [
        "num of accesses = 1480\n",
        0.5906169414520264,
        2.2800000000000002
    ],
    [
        "Packing Option = 1\n",
        0.5969433784484863,
        2.31
    ],
    [
        "Decision: Using Read-only O(sqrt n) mode for this memory\n",
        0.6030917167663574,
        2.33
    ],
    [
        "Attempting to solve linear systems for efficient Read-only memory access: Attempt#1 -- bitcount = 15\n",
        0.6084682941436768,
        2.3600000000000003
    ],
    [
        "done with read only memory solutions!\n",
        1.2030165195465088,
        3.25
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.215158224105835,
        3.27
    ],
    [
        "Num of variable reads = 128\n",
        1.225590705871582,
        3.2800000000000002
    ],
    [
        "Num of conditional writes = 0\n",
        1.2353403568267822,
        3.29
    ],
    [
        "Num of words per element = 1\n",
        1.2433414459228516,
        3.3000000000000003
    ],
    [
        "Num of variable writes = 0\n",
        1.2508554458618164,
        3.3000000000000003
    ],
    [
        "num of accesses = 128\n",
        1.2604618072509766,
        3.3200000000000003
    ],
    [
        "Packing Option = 1\n",
        1.2692034244537354,
        3.34
    ],
    [
        "Decision: Using Network mode for this memory\n",
        1.2775852680206299,
        3.35
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.2856550216674805,
        3.35
    ],
    [
        "Num of variable reads = 520\n",
        1.2934026718139648,
        3.36
    ],
    [
        "Num of conditional writes = 0\n",
        1.3008935451507568,
        3.37
    ],
    [
        "Num of words per element = 1\n",
        1.3083102703094482,
        3.38
    ],
    [
        "Num of variable writes = 0\n",
        1.3157174587249756,
        3.39
    ],
    [
        "num of accesses = 520\n",
        1.3235607147216797,
        3.39
    ],
    [
        "Packing Option = 1\n",
        1.3305811882019043,
        3.4
    ],
    [
        "Decision: Using Read-only O(sqrt n) mode for this memory\n",
        1.3376903533935547,
        3.41
    ],
    [
        "Attempting to solve linear systems for efficient Read-only memory access: Attempt#1 -- bitcount = 15\n",
        1.3445780277252197,
        3.41
    ],
    [
        "done with read only memory solutions!\n",
        1.7070095539093018,
        3.81
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.7198712825775146,
        3.83
    ],
    [
        "Num of variable reads = 128\n",
        1.7303786277770996,
        3.84
    ],
    [
        "Num of conditional writes = 0\n",
        1.7403194904327393,
        3.85
    ],
    [
        "Num of words per element = 1\n",
        1.7495734691619873,
        3.86
    ],
    [
        "Num of variable writes = 0\n",
        1.7586321830749512,
        3.86
    ],
    [
        "num of accesses = 128\n",
        1.7677764892578125,
        3.88
    ],
    [
        "Packing Option = 1\n",
        1.7764418125152588,
        3.88
    ],
    [
        "Decision: Using Network mode for this memory\n",
        1.7849721908569336,
        3.89
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.794473648071289,
        3.91
    ],
    [
        "Num of variable reads = 71\n",
        1.8037500381469727,
        3.92
    ],
    [
        "Num of conditional writes = 0\n",
        1.8124160766601562,
        3.93
    ],
    [
        "Num of words per element = 1\n",
        1.8207294940948486,
        3.94
    ],
    [
        "Num of variable writes = 0\n",
        1.8292856216430664,
        3.94
    ],
    [
        "num of accesses = 71\n",
        1.8376126289367676,
        3.95
    ],
    [
        "Packing Option = 1\n",
        1.8457832336425781,
        3.96
    ],
    [
        "Decision: Using Linear mode for this memory\n",
        1.853308916091919,
        3.97
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.8606197834014893,
        3.98
    ],
    [
        "Num of variable reads = 128\n",
        1.8678233623504639,
        3.98
    ],
    [
        "Num of conditional writes = 0\n",
        1.8749821186065674,
        3.9899999999999998
    ],
    [
        "Num of words per element = 1\n",
        1.8820650577545166,
        4.0
    ],
    [
        "Num of variable writes = 0\n",
        1.889153003692627,
        4.0
    ],
    [
        "num of accesses = 128\n",
        1.896113634109497,
        4.01
    ],
    [
        "Packing Option = 0\n",
        1.903045654296875,
        4.0200000000000005
    ],
    [
        "Decision: Using Network mode for this memory\n",
        1.9099860191345215,
        4.0200000000000005
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.9169340133666992,
        4.03
    ],
    [
        "Num of variable reads = 71\n",
        1.9268712997436523,
        4.05
    ],
    [
        "Num of conditional writes = 0\n",
        1.9361672401428223,
        4.07
    ],
    [
        "Num of words per element = 1\n",
        1.9450104236602783,
        4.09
    ],
    [
        "Num of variable writes = 0\n",
        1.9537982940673828,
        4.1000000000000005
    ],
    [
        "num of accesses = 71\n",
        1.9626145362854004,
        4.12
    ],
    [
        "Packing Option = 1\n",
        1.971160650253296,
        4.13
    ],
    [
        "Decision: Using Linear mode for this memory\n",
        1.9791898727416992,
        4.13
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.9866926670074463,
        4.140000000000001
    ],
    [
        "Num of variable reads = 128\n",
        1.994230031967163,
        4.15
    ],
    [
        "Num of conditional writes = 0\n",
        2.0022425651550293,
        4.17
    ],
    [
        "Num of words per element = 1\n",
        2.0103418827056885,
        4.180000000000001
    ],
    [
        "Num of variable writes = 0\n",
        2.017879009246826,
        4.19
    ],
    [
        "num of accesses = 128\n",
        2.0267231464385986,
        4.19
    ],
    [
        "Packing Option = 0\n",
        2.034829616546631,
        4.2
    ],
    [
        "Decision: Using Network mode for this memory\n",
        2.0424129962921143,
        4.21
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        2.049664258956909,
        4.220000000000001
    ],
    [
        "Num of variable reads = 0\n",
        2.0577139854431152,
        4.24
    ],
    [
        "Num of conditional writes = 0\n",
        2.0674891471862793,
        4.24
    ],
    [
        "Num of words per element = 1\n",
        2.0763676166534424,
        4.25
    ],
    [
        "Num of variable writes = 0\n",
        2.0847132205963135,
        4.260000000000001
    ],
    [
        "num of accesses = 0\n",
        2.093031883239746,
        4.2700000000000005
    ],
    [
        "Packing Option = 0\n",
        2.1018168926239014,
        4.29
    ],
    [
        "Decision: Using Linear mode for this memory\n",
        2.110640525817871,
        4.3100000000000005
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        2.1190130710601807,
        4.3100000000000005
    ],
    [
        "Num of variable reads = 15080\n",
        2.1275482177734375,
        4.33
    ],
    [
        "Num of conditional writes = 0\n",
        2.1361985206604004,
        4.3500000000000005
    ],
    [
        "Num of words per element = 1\n",
        2.1449129581451416,
        4.37
    ],
    [
        "Num of variable writes = 0\n",
        2.1539483070373535,
        4.380000000000001
    ],
    [
        "num of accesses = 15080\n",
        2.1633310317993164,
        4.4
    ],
    [
        "Packing Option = 1\n",
        2.1724345684051514,
        4.420000000000001
    ],
    [
        "Decision: Using Read-only O(sqrt n) mode for this memory\n",
        2.1815378665924072,
        4.430000000000001
    ],
    [
        "Attempting to solve linear systems for efficient Read-only memory access: Attempt#1 -- bitcount = 15\n",
        2.1913514137268066,
        4.460000000000001
    ],
    [
        "done with read only memory solutions!\n",
        2.2115888595581055,
        4.48
    ],
    [
        "Phase 1: Analysis Completed!\n",
        2.220841407775879,
        4.5
    ],
    [
        "[2nd Phase] Running Circuit Generator for < Test_HTTP_Merkle >\n",
        2.229896306991577,
        4.5200000000000005
    ],
    [
        "Circuit Generation Done for < Test_HTTP_Merkle >  \n",
        6.91573429107666,
        31.32
    ],
    [
        " \t Total Number of Constraints :  2511163\n",
        6.944228410720825,
        31.439999999999998
    ],
    [
        "\n",
        6.978177547454834,
        31.57
    ],
    [
        "Instruction queue size: 11414131\n",
        7.007746458053589,
        31.669999999999998
    ],
    [
        "Normal execution\n",
        17.204268217086792,
        44.43
    ],
    [
        "Running Sample Run: run15001\n",
        17.236507892608643,
        44.44
    ],
    [
        "../Tests/tls_data.txt\n",
        17.26600217819214,
        44.449999999999996
    ],
    [
        "../Tests/merkle_data.txt\n",
        17.29457926750183,
        44.51
    ],
    [
        "Url assignment done\n",
        17.32647156715393,
        44.6
    ],
    [
        "Evaluating Input on the circuit \n",
        17.359623908996582,
        44.699999999999996
    ],
    [
        "\t[input] Value of Wire # 0 (The one-input wire.) :: 1\n",
        17.392810583114624,
        44.75
    ],
    [
        "\t[input] Value of Wire # 2 :: 6e8\n",
        17.42602849006653,
        44.79
    ],
    [
        "\t[input] Value of Wire # 19 :: 108\n",
        17.460012435913086,
        44.839999999999996
    ],
    [
        "\t[input] Value of Wire # 20 :: 4\n",
        17.49211072921753,
        44.86
    ],
    [
        "\t[input] Value of Wire # 21 :: 6\n",
        17.524678707122803,
        44.89
    ],
    [
        "\t[input] Value of Wire # 22 :: 297ca9c14951fbaad217dc76566893385ae3ed90b54baf41c6ba205e35a0b646\n",
        17.558287858963013,
        44.94
    ],
    [
        "\t[input] Value of Wire # 23 :: e3\n",
        17.594976902008057,
        45.04
    ],
    [
        "\t[input] Value of Wire # 32 :: bf\n",
        17.631223440170288,
        45.120000000000005
    ],
    [
        "\t[input] Value of Wire # 41 :: a4\n",
        17.668988943099976,
        45.22
    ],
    [
        "\t[input] Value of Wire # 50 :: 1\n",
        17.705427885055542,
        45.29
    ],
    [
        "\t[input] Value of Wire # 59 :: a4\n",
        17.74140429496765,
        45.35
    ],
    [
        "\t[input] Value of Wire # 68 :: 40\n",
        17.78486204147339,
        45.47
    ],
    [
        "\t[input] Value of Wire # 77 :: ed\n",
        17.86893892288208,
        46.21
    ],
    [
        "\t[input] Value of Wire # 86 :: 41\n",
        17.904188632965088,
        46.25
    ],
    [
        "\t[input] Value of Wire # 95 :: f\n",
        17.938693284988403,
        46.28
    ],
    [
        "\t[input] Value of Wire # 104 :: 3b\n",
        17.984407901763916,
        46.47
    ],
    [
        "\t[input] Value of Wire # 113 :: d0\n",
        18.062855005264282,
        47.080000000000005
    ],
    [
        "\t[input] Value of Wire # 122 :: b2\n",
        18.099760055541992,
        47.24
    ],
    [
        "\t[input] Value of Wire # 131 :: 5e\n",
        18.137568473815918,
        47.38
    ],
    [
        "\t[input] Value of Wire # 140 :: 1f\n",
        18.174981594085693,
        47.53
    ],
    [
        "\t[input] Value of Wire # 149 :: b7\n",
        18.21264910697937,
        47.690000000000005
    ],
    [
        "\t[input] Value of Wire # 158 :: 92\n",
        18.2503764629364,
        47.830000000000005
    ],
    [
        "\t[input] Value of Wire # 167 :: 9f\n",
        18.288257837295532,
        47.99
    ],
    [
        "\t[input] Value of Wire # 176 :: 37\n",
        18.32642674446106,
        48.14
    ],
    [
        "\t[input] Value of Wire # 185 :: 6b\n",
        18.36410880088806,
        48.300000000000004
    ],
    [
        "\t[input] Value of Wire # 194 :: 74\n",
        18.40049457550049,
        48.45
    ],
    [
        "\t[input] Value of Wire # 203 :: bb\n",
        18.432361364364624,
        48.550000000000004
    ],
    [
        "\t[input] Value of Wire # 212 :: 39\n",
        18.463914155960083,
        48.89
    ],
    [
        "\t[input] Value of Wire # 221 :: 5\n",
        18.51916766166687,
        48.89
    ],
    [
        "\t[input] Value of Wire # 230 :: 2b\n",
        18.554802179336548,
        49.05
    ],
    [
        "\t[input] Value of Wire # 239 :: 43\n",
        18.59364080429077,
        49.26
    ],
    [
        "\t[input] Value of Wire # 248 :: 1d\n",
        18.640376567840576,
        49.55
    ],
    [
        "\t[input] Value of Wire # 257 :: 93\n",
        18.679468631744385,
        49.74
    ],
    [
        "\t[input] Value of Wire # 266 :: a9\n",
        18.71414041519165,
        49.910000000000004
    ],
    [
        "\t[input] Value of Wire # 275 :: b7\n",
        18.749433755874634,
        50.08
    ],
    [
        "\t[input] Value of Wire # 284 :: f2\n",
        18.784170150756836,
        50.24
    ],
    [
        "\t[input] Value of Wire # 293 :: cb\n",
        18.820393085479736,
        50.410000000000004
    ],
    [
        "\t[input] Value of Wire # 302 :: 99\n",
        18.85358738899231,
        50.52
    ],
    [
        "\t[input] Value of Wire # 311 :: cf\n",
        18.882086038589478,
        50.52
    ],
    [
        "\t[input] Value of Wire # 320 :: a3\n",
        18.915101528167725,
        50.64
    ],
    [
        "\t[input] Value of Wire # 329 :: 2f\n",
        18.94531774520874,
        50.74
    ],
    [
        "\t[input] Value of Wire # 338 :: d4\n",
        18.97516441345215,
        50.82
    ],
    [
        "\t[input] Value of Wire # 347 :: 0\n",
        19.0060875415802,
        50.92
    ],
    [
        "\t[input] Value of Wire # 356 :: 0\n",
        19.038556575775146,
        51.02
    ],
    [
        "\t[input] Value of Wire # 365 :: 0\n",
        19.07104468345642,
        51.12
    ],
    [
        "\t[input] Value of Wire # 374 :: 0\n",
        19.103219270706177,
        51.21
    ],
    [
        "\t[input] Value of Wire # 383 :: 0\n",
        19.134819984436035,
        51.309999999999995
    ],
    [
        "\t[input] Value of Wire # 392 :: 0\n",
        19.164966821670532,
        51.41
    ],
    [
        "\t[input] Value of Wire # 401 :: 0\n",
        19.19397735595703,
        51.449999999999996
    ],
    [
        "\t[input] Value of Wire # 410 :: 0\n",
        19.224799871444702,
        51.51
    ],
    [
        "\t[input] Value of Wire # 419 :: 0\n",
        19.255220651626587,
        51.57
    ],
    [
        "\t[input] Value of Wire # 428 :: 0\n",
        19.285661458969116,
        51.67
    ],
    [
        "\t[input] Value of Wire # 437 :: 0\n",
        19.314111709594727,
        51.69
    ],
    [
        "\t[input] Value of Wire # 446 :: 0\n",
        19.345789432525635,
        51.79
    ],
    [
        "Done",
        19.829577684402466,
        51.89
    ]
]