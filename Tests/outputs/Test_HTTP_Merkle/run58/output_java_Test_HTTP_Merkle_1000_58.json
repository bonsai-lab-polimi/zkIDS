[
    [
        "[1st Phase] Running Initial Circuit Analysis for < Test_HTTP_Merkle >\n",
        0.2905538082122803,
        0.03
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        0.7853326797485352,
        1.8199999999999998
    ],
    [
        "Num of variable reads = 1480\n",
        0.7930867671966553,
        1.8599999999999999
    ],
    [
        "Num of conditional writes = 0\n",
        0.7994189262390137,
        1.8900000000000001
    ],
    [
        "Num of words per element = 1\n",
        0.8053326606750488,
        1.9100000000000001
    ],
    [
        "Num of variable writes = 0\n",
        0.8113698959350586,
        1.94
    ],
    [
        "num of accesses = 1480\n",
        0.8174095153808594,
        1.9500000000000002
    ],
    [
        "Packing Option = 1\n",
        0.8235964775085449,
        1.9900000000000002
    ],
    [
        "Decision: Using Read-only O(sqrt n) mode for this memory\n",
        0.8324337005615234,
        2.02
    ],
    [
        "Attempting to solve linear systems for efficient Read-only memory access: Attempt#1 -- bitcount = 15\n",
        0.8469717502593994,
        2.16
    ],
    [
        "done with read only memory solutions!\n",
        1.4420955181121826,
        3.13
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.4617371559143066,
        3.15
    ],
    [
        "Num of variable reads = 128\n",
        1.480031967163086,
        3.17
    ],
    [
        "Num of conditional writes = 0\n",
        1.4946558475494385,
        3.19
    ],
    [
        "Num of words per element = 1\n",
        1.5066077709197998,
        3.1999999999999997
    ],
    [
        "Num of variable writes = 0\n",
        1.5155141353607178,
        3.21
    ],
    [
        "num of accesses = 128\n",
        1.5238301753997803,
        3.2199999999999998
    ],
    [
        "Packing Option = 1\n",
        1.5318260192871094,
        3.2199999999999998
    ],
    [
        "Decision: Using Network mode for this memory\n",
        1.538736343383789,
        3.23
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.5450057983398438,
        3.2399999999999998
    ],
    [
        "Num of variable reads = 520\n",
        1.5509922504425049,
        3.2399999999999998
    ],
    [
        "Num of conditional writes = 0\n",
        1.557337760925293,
        3.25
    ],
    [
        "Num of words per element = 1\n",
        1.563502311706543,
        3.26
    ],
    [
        "Num of variable writes = 0\n",
        1.575829029083252,
        3.27
    ],
    [
        "num of accesses = 520\n",
        1.5889315605163574,
        3.28
    ],
    [
        "Packing Option = 1\n",
        1.6021466255187988,
        3.3
    ],
    [
        "Decision: Using Read-only O(sqrt n) mode for this memory\n",
        1.6154968738555908,
        3.31
    ],
    [
        "Attempting to solve linear systems for efficient Read-only memory access: Attempt#1 -- bitcount = 15\n",
        1.628833532333374,
        3.32
    ],
    [
        "done with read only memory solutions!\n",
        1.9309463500976562,
        3.64
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.9457356929779053,
        3.65
    ],
    [
        "Num of variable reads = 128\n",
        1.9595863819122314,
        3.67
    ],
    [
        "Num of conditional writes = 0\n",
        1.9734959602355957,
        3.68
    ],
    [
        "Num of words per element = 1\n",
        1.9872846603393555,
        3.69
    ],
    [
        "Num of variable writes = 0\n",
        2.000849485397339,
        3.71
    ],
    [
        "num of accesses = 128\n",
        2.0143513679504395,
        3.7199999999999998
    ],
    [
        "Packing Option = 1\n",
        2.028362512588501,
        3.7399999999999998
    ],
    [
        "Decision: Using Network mode for this memory\n",
        2.0411264896392822,
        3.75
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        2.053877353668213,
        3.76
    ],
    [
        "Num of variable reads = 71\n",
        2.067034959793091,
        3.78
    ],
    [
        "Num of conditional writes = 0\n",
        2.080188512802124,
        3.79
    ],
    [
        "Num of words per element = 1\n",
        2.093327760696411,
        3.8
    ],
    [
        "Num of variable writes = 0\n",
        2.106987953186035,
        3.82
    ],
    [
        "num of accesses = 71\n",
        2.1203091144561768,
        3.83
    ],
    [
        "Packing Option = 1\n",
        2.1336443424224854,
        3.84
    ],
    [
        "Decision: Using Linear mode for this memory\n",
        2.1474132537841797,
        3.87
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        2.1614441871643066,
        3.89
    ],
    [
        "Num of variable reads = 128\n",
        2.1754367351531982,
        3.92
    ],
    [
        "Num of conditional writes = 0\n",
        2.189218044281006,
        3.9400000000000004
    ],
    [
        "Num of words per element = 1\n",
        2.202941656112671,
        3.96
    ],
    [
        "Num of variable writes = 0\n",
        2.2167551517486572,
        3.98
    ],
    [
        "num of accesses = 128\n",
        2.2306454181671143,
        4.01
    ],
    [
        "Packing Option = 0\n",
        2.2443041801452637,
        4.02
    ],
    [
        "Decision: Using Network mode for this memory\n",
        2.2578210830688477,
        4.03
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        2.2710232734680176,
        4.05
    ],
    [
        "Num of variable reads = 71\n",
        2.284104347229004,
        4.06
    ],
    [
        "Num of conditional writes = 0\n",
        2.297356605529785,
        4.08
    ],
    [
        "Num of words per element = 1\n",
        2.311038017272949,
        4.11
    ],
    [
        "Num of variable writes = 0\n",
        2.3249197006225586,
        4.13
    ],
    [
        "num of accesses = 71\n",
        2.3390133380889893,
        4.17
    ],
    [
        "Packing Option = 1\n",
        2.352874279022217,
        4.19
    ],
    [
        "Decision: Using Linear mode for this memory\n",
        2.367020845413208,
        4.22
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        2.3809773921966553,
        4.24
    ],
    [
        "Num of variable reads = 128\n",
        2.395193576812744,
        4.2700000000000005
    ],
    [
        "Num of conditional writes = 0\n",
        2.4083802700042725,
        4.3
    ],
    [
        "Num of words per element = 1\n",
        2.418968439102173,
        4.3100000000000005
    ],
    [
        "Num of variable writes = 0\n",
        2.429255485534668,
        4.33
    ],
    [
        "num of accesses = 128\n",
        2.4394924640655518,
        4.37
    ],
    [
        "Packing Option = 0\n",
        2.4506704807281494,
        4.4
    ],
    [
        "Decision: Using Network mode for this memory\n",
        2.4635941982269287,
        4.44
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        2.4796416759490967,
        4.51
    ],
    [
        "Num of variable reads = 0\n",
        2.4965643882751465,
        4.57
    ],
    [
        "Num of conditional writes = 0\n",
        2.509275197982788,
        4.62
    ],
    [
        "Num of words per element = 1\n",
        2.52089524269104,
        4.66
    ],
    [
        "Num of variable writes = 0\n",
        2.5329270362854004,
        4.71
    ],
    [
        "num of accesses = 0\n",
        2.5444388389587402,
        4.76
    ],
    [
        "Packing Option = 0\n",
        2.5564351081848145,
        4.8
    ],
    [
        "Decision: Using Linear mode for this memory\n",
        2.568328619003296,
        4.84
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        2.5789973735809326,
        4.8500000000000005
    ],
    [
        "Num of variable reads = 10120\n",
        2.5892579555511475,
        4.87
    ],
    [
        "Num of conditional writes = 0\n",
        2.599266529083252,
        4.89
    ],
    [
        "Num of words per element = 1\n",
        2.6093668937683105,
        4.91
    ],
    [
        "Num of variable writes = 0\n",
        2.620352029800415,
        4.94
    ],
    [
        "num of accesses = 10120\n",
        2.6326241493225098,
        4.97
    ],
    [
        "Packing Option = 1\n",
        2.644684314727783,
        5.01
    ],
    [
        "Decision: Using Read-only O(sqrt n) mode for this memory\n",
        2.655853033065796,
        5.03
    ],
    [
        "Attempting to solve linear systems for efficient Read-only memory access: Attempt#1 -- bitcount = 15\n",
        2.6679999828338623,
        5.08
    ],
    [
        "done with read only memory solutions!\n",
        2.679840326309204,
        5.12
    ],
    [
        "Phase 1: Analysis Completed!\n",
        2.6927287578582764,
        5.17
    ],
    [
        "[2nd Phase] Running Circuit Generator for < Test_HTTP_Merkle >\n",
        2.705414295196533,
        5.21
    ],
    [
        "Circuit Generation Done for < Test_HTTP_Merkle >  \n",
        6.023682117462158,
        22.11
    ],
    [
        " \t Total Number of Constraints :  2146535\n",
        6.048067569732666,
        22.22
    ],
    [
        "\n",
        6.071066856384277,
        22.310000000000002
    ],
    [
        "Instruction queue size: 8566493\n",
        6.0950493812561035,
        22.41
    ],
    [
        "Normal execution\n",
        13.868587017059326,
        32.1
    ],
    [
        "Running Sample Run: run10001\n",
        13.89542031288147,
        32.11
    ],
    [
        "../Tests/tls_data.txt\n",
        13.920629262924194,
        32.11
    ],
    [
        "../Tests/merkle_data.txt\n",
        13.94611406326294,
        32.14
    ],
    [
        "Url assignment done\n",
        13.974797487258911,
        32.19
    ],
    [
        "Evaluating Input on the circuit \n",
        14.003187894821167,
        32.3
    ],
    [
        "\t[input] Value of Wire # 0 (The one-input wire.) :: 1\n",
        14.032460451126099,
        32.36
    ],
    [
        "\t[input] Value of Wire # 2 :: 6e8\n",
        14.062337875366211,
        32.42
    ],
    [
        "\t[input] Value of Wire # 19 :: 108\n",
        14.09187912940979,
        32.46
    ],
    [
        "\t[input] Value of Wire # 20 :: 4\n",
        14.122066020965576,
        32.49
    ],
    [
        "\t[input] Value of Wire # 21 :: 6\n",
        14.152186393737793,
        32.519999999999996
    ],
    [
        "\t[input] Value of Wire # 22 :: 297ca9c14951fbaad217dc76566893385ae3ed90b54baf41c6ba205e35a0b646\n",
        14.18223762512207,
        32.559999999999995
    ],
    [
        "\t[input] Value of Wire # 23 :: e3\n",
        14.212762832641602,
        32.589999999999996
    ],
    [
        "\t[input] Value of Wire # 32 :: bf\n",
        14.243459224700928,
        32.62
    ],
    [
        "\t[input] Value of Wire # 41 :: a4\n",
        14.27497673034668,
        32.72
    ],
    [
        "\t[input] Value of Wire # 50 :: 1\n",
        14.306190013885498,
        32.78
    ],
    [
        "\t[input] Value of Wire # 59 :: a4\n",
        14.337150812149048,
        32.82
    ],
    [
        "\t[input] Value of Wire # 68 :: 40\n",
        14.368736743927002,
        32.86
    ],
    [
        "\t[input] Value of Wire # 77 :: ed\n",
        14.398962497711182,
        32.89
    ],
    [
        "\t[input] Value of Wire # 86 :: 41\n",
        14.42958927154541,
        32.92
    ],
    [
        "\t[input] Value of Wire # 95 :: f\n",
        14.460140705108643,
        32.96
    ],
    [
        "\t[input] Value of Wire # 104 :: 3b\n",
        14.490240335464478,
        32.99
    ],
    [
        "\t[input] Value of Wire # 113 :: d0\n",
        14.524047136306763,
        33.07
    ],
    [
        "\t[input] Value of Wire # 122 :: b2\n",
        14.62464427947998,
        34.080000000000005
    ],
    [
        "\t[input] Value of Wire # 131 :: 5e\n",
        14.67652440071106,
        34.47
    ],
    [
        "\t[input] Value of Wire # 140 :: 1f\n",
        14.70761775970459,
        34.51
    ],
    [
        "\t[input] Value of Wire # 149 :: b7\n",
        14.736816167831421,
        34.54
    ],
    [
        "\t[input] Value of Wire # 158 :: 92\n",
        14.761202812194824,
        34.55
    ],
    [
        "\t[input] Value of Wire # 167 :: 9f\n",
        14.788482666015625,
        34.599999999999994
    ],
    [
        "\t[input] Value of Wire # 176 :: 37\n",
        14.813450574874878,
        34.629999999999995
    ],
    [
        "\t[input] Value of Wire # 185 :: 6b\n",
        14.83918309211731,
        34.69
    ],
    [
        "\t[input] Value of Wire # 194 :: 74\n",
        14.867401838302612,
        34.739999999999995
    ],
    [
        "\t[input] Value of Wire # 203 :: bb\n",
        14.89556074142456,
        34.8
    ],
    [
        "\t[input] Value of Wire # 212 :: 39\n",
        14.924386024475098,
        34.86
    ],
    [
        "\t[input] Value of Wire # 221 :: 5\n",
        14.953640699386597,
        34.919999999999995
    ],
    [
        "\t[input] Value of Wire # 230 :: 2b\n",
        14.98119568824768,
        34.94
    ],
    [
        "\t[input] Value of Wire # 239 :: 43\n",
        15.007867813110352,
        34.97
    ],
    [
        "\t[input] Value of Wire # 248 :: 1d\n",
        15.034959554672241,
        35.0
    ],
    [
        "\t[input] Value of Wire # 257 :: 93\n",
        15.062352180480957,
        35.04
    ],
    [
        "\t[input] Value of Wire # 266 :: a9\n",
        15.088602781295776,
        35.06
    ],
    [
        "\t[input] Value of Wire # 275 :: b7\n",
        15.112937211990356,
        35.06
    ],
    [
        "\t[input] Value of Wire # 284 :: f2\n",
        15.136699438095093,
        35.06
    ],
    [
        "\t[input] Value of Wire # 293 :: cb\n",
        15.160223722457886,
        35.06
    ],
    [
        "\t[input] Value of Wire # 302 :: 99\n",
        15.184035301208496,
        35.06
    ],
    [
        "\t[input] Value of Wire # 311 :: cf\n",
        15.20765495300293,
        35.06
    ],
    [
        "\t[input] Value of Wire # 320 :: a3\n",
        15.231067180633545,
        35.06
    ],
    [
        "Done",
        15.674787521362305,
        35.06
    ]
]